{"ast":null,"code":"import { AuthService } from \"./auth.service\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction AuthComponent_form_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 4, 0);\n    i0.ɵɵlistener(\"ngSubmit\", function AuthComponent_form_4_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const authForm_r2 = i0.ɵɵreference(1);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onSubmit(authForm_r2));\n    });\n    i0.ɵɵelementStart(2, \"div\", 5)(3, \"label\", 6);\n    i0.ɵɵtext(4, \"E-Mail\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"input\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 5)(7, \"label\", 8);\n    i0.ɵɵtext(8, \"Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(9, \"input\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(10, \"br\");\n    i0.ɵɵelementStart(11, \"div\")(12, \"button\", 10);\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(14, \" | \");\n    i0.ɵɵelementStart(15, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function AuthComponent_form_4_Template_button_click_15_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onSwitchMode());\n    });\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const authForm_r2 = i0.ɵɵreference(1);\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(12);\n    i0.ɵɵproperty(\"disabled\", !authForm_r2.valid);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.isLoginMode ? \"Login\" : \"Sign Up\", \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" Switch to \", ctx_r2.isLoginMode ? \"Sign Up\" : \"Login\", \" \");\n  }\n}\nexport let AuthComponent = /*#__PURE__*/(() => {\n  class AuthComponent {\n    constructor(authService) {\n      this.authService = authService;\n      this.isLoginMode = true;\n      this.isLoading = false;\n    }\n    onSwitchMode() {\n      this.isLoginMode = !this.isLoginMode;\n    }\n    onSubmit(form) {\n      if (!form.valid) {\n        return;\n      }\n      // console.log(form.value);\n      const email = form.value.email;\n      const password = form.value.password;\n      this.isLoading = true;\n      if (this.isLoginMode) {\n        //..\n      } else {\n        this.authService.signup(email, password).subscribe(resData => {\n          console.log(resData);\n          this.isLoading = false;\n        }, error => {\n          console.log(error);\n          this.isLoading = false;\n        });\n      }\n      form.reset();\n    }\n    static #_ = this.ɵfac = function AuthComponent_Factory(t) {\n      return new (t || AuthComponent)(i0.ɵɵdirectiveInject(i1.AuthService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AuthComponent,\n      selectors: [[\"app-auth\"]],\n      decls: 5,\n      vars: 1,\n      consts: [[\"authForm\", \"ngForm\"], [1, \"row\"], [1, \"col-xs-12\", \"col-md-6\", \"col-md-offset-3\"], [3, \"ngSubmit\", 4, \"ngIf\"], [3, \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"ngModel\", \"\", \"name\", \"email\", \"required\", \"\", \"email\", \"\", 1, \"form-control\"], [\"for\", \"Password\"], [\"type\", \"password\", \"id\", \"password\", \"ngModel\", \"\", \"name\", \"password\", \"required\", \"\", \"minlength\", \"6\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [1, \"btn\", \"btn-primary\", 3, \"click\"]],\n      template: function AuthComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"div\");\n          i0.ɵɵelement(3, \"app-loading-spinner\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(4, AuthComponent_form_4_Template, 17, 3, \"form\", 3);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n        }\n      },\n      dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.MinLengthValidator, i3.EmailValidator, i3.NgModel, i3.NgForm],\n      encapsulation: 2\n    });\n  }\n  return AuthComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}